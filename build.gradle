plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
    id "org.sonarqube" version "4.2.1.3168"
    id 'info.solidsoft.pitest' version '1.15.0'
    id 'jacoco'
}

apply plugin: 'info.solidsoft.pitest'

group = 'com.isadorastrottmann'
version = '1.0.0'

java {
    sourceCompatibility = JavaVersion.VERSION_17
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.16'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    implementation 'com.auth0:java-jwt:4.4.0'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    testImplementation 'org.mockito:mockito-junit-jupiter'
    testImplementation'org.junit.jupiter:junit-jupiter:5.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    testRuntimeOnly'org.junit.platform:junit-platform-launcher'

    //essas s√£o pro teste de contrato que eu tinha tentado, mas que deu errado
//    testImplementation 'io.rest-assured:rest-assured:5.3.2'
//    testImplementation 'io.rest-assured:json-schema-validator:5.3.2'

    implementation 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.15.0'
    pitest 'org.example.pit.plugins:pitest-custom-plugin:0.42'
}

//simula uma tarefa de testes (?)
//    https://www.jetbrains.com/help/idea/2022.1/work-with-gradle-projects.html#tests_with_source_set
sourceSets {
    testes {
        java {
            srcDir 'src/test/java'
        }
        resources {
            srcDir 'src/test/resources'
        }
        compileClasspath += sourceSets.main.runtimeClasspath
    }
}
//ainda simulando uma tarefa de testes
task testes(type: Test) {
    description = "Hopefully Runs Tests"
    testClassesDirs = sourceSets.testes.output.classesDirs
    classpath += sourceSets.testes.runtimeClasspath

    systemProperty 'spring.test.constructor.autowire.mode', 'all'

    finalizedBy jacocoTestReport
}

//test {
//    useJUnitPlatform()
//    testClassesDirs = sourceSets.test.output.classesDirs

//systemProperty 'spring.test.constructor.autowire.mode', 'all'

//    finalizedBy jacocoTestReport
//}

jacoco {
    toolVersion = "0.8.11"
}

jacocoTestReport {
//    dependsOn test
    dependsOn testes
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

sonar {
    properties {
        property "sonar.projectKey", "customerCrud"
        property "sonar.projectName", "customerCrud"
    }
}

pitest {
    threads = 4
    outputFormats = ['XML', 'HTML']
    timestampedReports = false
    junit5PluginVersion = '1.2.1'
    testSourceSets = [sourceSets.testes]
    jvmArgs = ['-Dspring.test.constructor.autowire.mode=all']
}